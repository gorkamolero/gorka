@import "tailwindcss";

:root {
  --background: #000000;
  --foreground: #00ff41;
  
  /* Glow intensity - adjust this value (0-1) to control all glow effects */
  --glow-intensity: 0.5; /* 0 = no glow, 1 = full neon */
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-green-400: #00ff41;
  --font-sans: var(--font-geist-sans);
  --font-mono: 'JetBrains Mono', 'Fira Code', monospace;
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: var(--font-mono);
  overflow: hidden;
}

/* Hide scrollbar but keep functionality */
.scrollbar-hide {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.scrollbar-hide::-webkit-scrollbar {
  display: none;
}

/* CRT Effect - Scanlines */
.scanlines::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    transparent 50%,
    rgba(0, 255, 65, 0.08) 50%
  );
  background-size: 100% 3px;
  animation: scanlines 6s linear infinite;
  pointer-events: none;
}

@keyframes scanlines {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 0 10px;
  }
}

/* CRT Effect - Screen flicker */
.flicker::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 255, 65, 0.02);
  animation: flicker 0.15s infinite;
  pointer-events: none;
}

@keyframes flicker {
  0% {
    opacity: 0.85;
  }
  10% {
    opacity: 0.9;
  }
  20% {
    opacity: 0.85;
  }
  30% {
    opacity: 1;
  }
  40% {
    opacity: 0.95;
  }
  50% {
    opacity: 0.9;
  }
  60% {
    opacity: 1;
  }
  70% {
    opacity: 0.85;
  }
  80% {
    opacity: 0.9;
  }
  90% {
    opacity: 1;
  }
  100% {
    opacity: 0.85;
  }
}

/* CRT Effect - Vignette */
.vignette::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(
    ellipse at center,
    transparent 0%,
    transparent 70%,
    rgba(0, 0, 0, 0.1) 90%,
    rgba(0, 0, 0, 0.2) 100%
  );
  pointer-events: none;
}

/* CRT screen curvature */
.crt-curve {
  border-radius: 20px;
  box-shadow: 
    inset 0 0 120px rgba(0, 0, 0, 0.5),
    inset 0 0 40px rgba(0, 0, 0, 0.5);
}

/* Chromatic aberration */
.crt-content {
  animation: chromatic 8s infinite;
}

@keyframes chromatic {
  0%, 100% {
    text-shadow: 
      0.02em 0 0 rgba(255, 0, 0, 0.5),
      -0.02em 0 0 rgba(0, 255, 255, 0.5);
  }
  50% {
    text-shadow: 
      0.03em 0 0 rgba(255, 0, 0, 0.5),
      -0.03em 0 0 rgba(0, 255, 255, 0.5);
  }
}

/* RGB shift lines */
.rgb-lines::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 0, 0, 0.5),
    transparent
  );
  animation: rgb-scan 4s linear infinite;
}

@keyframes rgb-scan {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100vh);
  }
}

/* Text glow effect - VSCode Neon style */
.text-green-400 {
  color: #00ff41;
  text-shadow: 
    /* Tight bright glow */
    0 0 calc(2px * var(--glow-intensity)) rgba(255, 255, 255, var(--glow-intensity)),
    0 0 calc(4px * var(--glow-intensity)) rgba(255, 255, 255, calc(var(--glow-intensity) * 0.8)),
    0 0 calc(6px * var(--glow-intensity)) rgba(255, 255, 255, calc(var(--glow-intensity) * 0.6)),
    /* Color glow */
    0 0 calc(10px * var(--glow-intensity)) rgba(0, 255, 65, calc(var(--glow-intensity) * 0.8)),
    0 0 calc(15px * var(--glow-intensity)) rgba(0, 255, 65, calc(var(--glow-intensity) * 0.6)),
    0 0 calc(20px * var(--glow-intensity)) rgba(0, 255, 65, calc(var(--glow-intensity) * 0.4)),
    0 0 calc(30px * var(--glow-intensity)) rgba(0, 255, 65, calc(var(--glow-intensity) * 0.2)),
    0 0 calc(40px * var(--glow-intensity)) rgba(0, 255, 65, calc(var(--glow-intensity) * 0.1));
}

/* Even stronger glow for blinking cursor */
.bg-green-400.animate-pulse {
  background: #00ff41;
  box-shadow:
    0 0 calc(5px * var(--glow-intensity)) rgba(255, 255, 255, var(--glow-intensity)),
    0 0 calc(10px * var(--glow-intensity)) rgba(0, 255, 65, calc(var(--glow-intensity) * 0.8)),
    0 0 calc(15px * var(--glow-intensity)) rgba(0, 255, 65, calc(var(--glow-intensity) * 0.6)),
    0 0 calc(20px * var(--glow-intensity)) rgba(0, 255, 65, calc(var(--glow-intensity) * 0.4)),
    0 0 calc(35px * var(--glow-intensity)) rgba(0, 255, 65, calc(var(--glow-intensity) * 0.2));
}

/* Cursor blink */
.caret-green-400 {
  caret-color: #00ff41;
}

/* Custom blinking cursor */
@keyframes blink-caret {
  0%, 49% {
    border-color: #00ff41;
  }
  50%, 100% {
    border-color: transparent;
  }
}

/* Yellow text for user input - with glow */
.text-yellow-300 {
  color: #fde047;
  text-shadow: 
    0 0 calc(2px * var(--glow-intensity)) rgba(255, 255, 255, var(--glow-intensity)),
    0 0 calc(4px * var(--glow-intensity)) rgba(255, 255, 255, calc(var(--glow-intensity) * 0.8)),
    0 0 calc(6px * var(--glow-intensity)) rgba(255, 255, 255, calc(var(--glow-intensity) * 0.6)),
    0 0 calc(10px * var(--glow-intensity)) rgba(253, 224, 71, calc(var(--glow-intensity) * 0.8)),
    0 0 calc(15px * var(--glow-intensity)) rgba(253, 224, 71, calc(var(--glow-intensity) * 0.6)),
    0 0 calc(20px * var(--glow-intensity)) rgba(253, 224, 71, calc(var(--glow-intensity) * 0.4)),
    0 0 calc(30px * var(--glow-intensity)) rgba(253, 224, 71, calc(var(--glow-intensity) * 0.2));
}

/* Terminal text selection */
::selection {
  background-color: #00ff41;
  color: #000000;
  text-shadow: none;
}

/* Input field styling */
input {
  font-family: inherit;
}

/* Tron-style grid background */
.tron-grid {
  background-image: 
    /* Vertical lines */
    linear-gradient(to right, 
      transparent 0%, 
      transparent calc(100% - 1px), 
      rgba(0, 255, 65, 0.03) calc(100% - 1px), 
      rgba(0, 255, 65, 0.03) 100%
    ),
    /* Horizontal lines */
    linear-gradient(to bottom, 
      transparent 0%, 
      transparent calc(100% - 1px), 
      rgba(0, 255, 65, 0.03) calc(100% - 1px), 
      rgba(0, 255, 65, 0.03) 100%
    );
  background-size: 80px 80px;
  background-position: -1px -1px;
  opacity: 0.5;
}

/* Add subtle perspective to the grid */
.tron-grid::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(to bottom, 
    transparent 0%, 
    rgba(0, 0, 0, 0.4) 100%
  );
  pointer-events: none;
}